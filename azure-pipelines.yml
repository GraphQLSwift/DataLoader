trigger:
- master

jobs:
- job: linux
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    maxParallel: 10
    matrix:
      swift500:
        containerImage: apple/swift:5
  container: $[ variables['containerImage'] ]
  steps:
    - script: swift test --parallel
      displayName: swift test

- job: Xcode
  pool:
    vmImage: 'macOS 10.14'
  strategy:
    maxParallel: 10
    matrix:
      xcode102:
        DEVELOPER_DIR: /Applications/Xcode_10.2.app
  steps:
    - script: swift package generate-xcodeproj
      displayName: Generate Xcode project file
    - script: xcodebuild -version
      displayName: xcodebuild -version
    - script: >
        set -o pipefail &&
        xcodebuild -project SwiftDataLoader.xcodeproj -scheme SwiftDataLoader-Package test |
        xcpretty -r junit -o build/reports/xcodebuild.xml
      displayName: xcodebuild test
    - task: PublishTestResults@2
      inputs:
        testRunner: JUnit
        testResultsFiles: build/reports/**
      condition: succeededOrFailed()

- job: SwiftPM
  pool:
    vmImage: 'macOS 10.14'
  strategy:
    maxParallel: 10
    matrix:
      xcode101:
        DEVELOPER_DIR: /Applications/Xcode_10.2.app
  steps:
    - script: xcodebuild -version
      displayName: xcodebuild -version
    - script: >
        set -o pipefail &&
        swift test --parallel
      displayName: swift test